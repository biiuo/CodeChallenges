version: "3.9"

services:
  db:
    image: postgres:16
    container_name: db_proyecto_final
    restart: unless-stopped
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend:
    build:
      context: .
      target: development
    container_name: api_proyecto_final
    environment:
      DATABASE_URL: "postgresql://user:pass@db:5432/db?schema=public"
      REDIS_URL: "redis://default:redispass@redis:6379/0"
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./src:/app/src  # Mount the source code
      - /app/node_modules  # Ensure node_modules is accessible
    command: npm run start:dev  # Use the development command

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "redispass"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis-commander:
    image: rediscommander/redis-commander:latest
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redispass
    ports:
      - "8081:8081"

volumes:
  db_data: